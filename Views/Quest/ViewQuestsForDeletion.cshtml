@model IEnumerable<Milestone3WebApp.Models.QuestViewModel>

<h2>Quests Available for Deletion</h2>

@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Quest ID</th>
                <th>Title</th>
                <th>Description</th>
                <th>Difficulty Level</th>
                <th>Criteria</th>
                <th>Deadline</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var quest in Model)
            {
                <tr>
                    <td>@quest.QuestID</td>
                    <td>@quest.Title</td>
                    <td>@quest.Description</td>
                    <td>@quest.DifficultyLevel</td>
                    <td>@quest.Criteria</td>
                    <td>@quest.Deadline.ToString("yyyy-MM-dd")</td>
                    <td>
                        <button class="btn btn-danger delete-quest-btn" data-criteria="@quest.Criteria">
                            Delete by Criteria
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No quests available for deletion.</p>
}

<script>
    document.querySelectorAll('.delete-quest-btn').forEach(button => {
        button.addEventListener('click', function () {
            const criteria = this.getAttribute('data-criteria');

            if (!criteria) {
                alert('Error: Invalid criteria.');
                return;
            }

            if (confirm(`Are you sure you want to delete all quests with criteria: ${criteria}?`)) {
                fetch('@Url.Action("DeleteQuestByCriteria", "Quest")', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(criteria)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload(); // Reload the page to update the quest list
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An unexpected error occurred. Please try again later.');
                });
            }
        });
    });
</script>