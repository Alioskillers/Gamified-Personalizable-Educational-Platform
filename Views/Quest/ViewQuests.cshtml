@model IEnumerable<Milestone3WebApp.Models.QuestViewModel>

<h2>Available Quests</h2>

@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Quest ID</th>
                <th>Title</th>
                <th>Description</th>
                <th>Difficulty Level</th>
                <th>Criteria</th>
                <th>Deadline</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var quest in Model)
            {
                <tr>
                    <td>@quest.QuestID</td>
                    <td>@quest.Title</td>
                    <td>@quest.Description</td>
                    <td>@quest.DifficultyLevel</td>
                    <td>@quest.Criteria</td>
                    <td>@quest.Deadline.ToString("yyyy-MM-dd")</td>
                    <td>
                        <button class="btn btn-primary join-quest-btn" data-quest-id="@quest.QuestID">
                            Join Quest
                        </button>
                        <button class="btn btn-secondary view-participants-btn" data-quest-id="@quest.QuestID">
                            View Participants
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No quests are available at the moment.</p>
}

<script>
    document.querySelectorAll('.join-quest-btn').forEach(button => {
    button.addEventListener('click', function () {
        const questID = this.getAttribute('data-quest-id');

        fetch('@Url.Action("JoinQuest", "Quest")', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(questID)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                location.reload(); // Reload the page to fetch updated data
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An unexpected error occurred.');
        });
    });
});
</script>

<script>
    document.querySelectorAll('.view-participants-btn').forEach(button => {
        button.addEventListener('click', function () {
            const questID = this.getAttribute('data-quest-id');
            window.location.href = `@Url.Action("ViewQuestParticipants", "Quest")?questID=${questID}`;
        });
    });
</script>