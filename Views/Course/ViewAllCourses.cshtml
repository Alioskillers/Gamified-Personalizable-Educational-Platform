@model List<Milestone3WebApp.Models.ViewAllCoursesModel>

<h2>All Courses</h2>

<div>
    <label for="LearnerID">Enter Learner ID:</label>
    <input type="number" id="LearnerID" class="form-control" placeholder="Enter Learner ID" required />
    <button class="btn btn-primary" id="view-learner-courses-btn">View Learner's Previous Courses</button>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Course ID</th>
            <th>Title</th>
            <th>Learning Objective</th>
            <th>Credit Points</th>
            <th>Difficulty Level</th>
            <th>Prerequisites</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var course in Model)
        {
            <tr>
                <td>@course.CourseID</td>
                <td>@course.Title</td>
                <td>@course.LearningObjective</td>
                <td>@course.CreditPoints</td>
                <td>@course.DifficultyLevel</td>
                <td>@course.Prerequisites</td>
                <td>@course.Description</td>
                <td>
                <button class="btn btn-danger remove-course-btn"
                        data-course-id="@course.CourseID">
                    Remove
                </button>
            </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function RemoveCourse(courseId) {
        if (confirm('Are you sure you want to delete this course?')) {
            fetch('/Course/RemoveCourse', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(courseId) // Pass the course ID
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    location.reload(); // Reload the page to reflect changes
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An unexpected error occurred.');
            });
        }
    }

    // Add event listener for the button
    document.querySelectorAll('.remove-course-btn').forEach(button => {
        button.addEventListener('click', function () {
            const courseId = this.getAttribute('data-course-id');
            RemoveCourse(courseId);
        });
    });
</script>

<script>
    document.getElementById('view-learner-courses-btn').addEventListener('click', function () {
        const learnerID = document.getElementById('LearnerID').value;

        if (!learnerID) {
            alert('Please enter a valid Learner ID.');
            return;
        }

        // Redirect to the correct action with the learner ID
        const url = '@Url.Action("InstructorPreviousCourses", "Course")';
        window.location.href = `${url}?learnerID=${learnerID}`;
    });
</script>